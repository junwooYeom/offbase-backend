name: Deploy to Supabase (Simple)

on:
  push:
    branches:
      - develop
      - main
  workflow_dispatch:

jobs:
  check-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: supabase/setup-cli@v1
        with:
          version: latest
      
      - name: Check for migrations
        id: check
        run: |
          if [ -d "supabase/migrations" ] && [ "$(ls -A supabase/migrations/*.sql 2>/dev/null)" ]; then
            echo "✅ Found migration files:"
            ls -la supabase/migrations/*.sql
            echo "has-migrations=true" >> $GITHUB_OUTPUT
          else
            echo "❌ No migration files found!"
            echo "has-migrations=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Deploy to Staging
        if: github.ref == 'refs/heads/develop' && steps.check.outputs.has-migrations == 'true'
        run: |
          echo "🚀 Deploying to Staging Environment"
          
          # Use the simpler approach without password flag
          supabase link --project-ref ${{ secrets.STAGING_PROJECT_REF }} <<< ""
          supabase db push --db-url "${{ secrets.STAGING_DATABASE_URL }}"
          
          echo "✅ Staging deployment complete!"
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      
      - name: Deploy to Production
        if: github.ref == 'refs/heads/main' && steps.check.outputs.has-migrations == 'true'
        run: |
          echo "🚀 Deploying to Production Environment"
          echo "⚠️  Production deployment - Project: zutbqmhxvdgvcllobtxo"
          
          # Use the simpler approach without password flag
          supabase link --project-ref ${{ secrets.PRODUCTION_PROJECT_REF }} <<< ""
          supabase db push --db-url "${{ secrets.PRODUCTION_DATABASE_URL }}"
          
          echo "✅ Production deployment complete!"
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      
      - name: No migrations found
        if: steps.check.outputs.has-migrations == 'false'
        run: |
          echo "❌ Deployment skipped - No migration files found"
          echo ""
          echo "To fix this, run locally:"
          echo "1. export SUPABASE_ACCESS_TOKEN=your-token"
          echo "2. ./scripts/initial-migration-setup.sh"
          echo "3. git add supabase/migrations/"
          echo "4. git commit -m 'Add migrations'"
          echo "5. git push"
          exit 1